require 'rails_helper'

RSpec.describe "GlucoseCsvs", type: :request do
  describe "upload" do

    let(:expected_csv) {
      <<~CSV.chomp
Glucose Data,Generated on,04-29-2025 10:34 PM UTC,Generated by,Jeffrey Waltzer
Device,Serial Number,Device Timestamp,Record Type,Historic Glucose mg/dL,Scan Glucose mg/dL,Non-numeric Rapid-Acting Insulin,Rapid-Acting Insulin (units),Non-numeric Food,Carbohydrates (grams),Carbohydrates (servings),Non-numeric Long-Acting Insulin,Long-Acting Insulin (units),Notes,Strip Glucose mg/dL,Ketone mmol/L,Meal Insulin (units),Correction Insulin (units),User Change Insulin (units)
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 09:52 PM,0,180,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 09:57 PM,0,182,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:02 PM,0,179,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:07 PM,0,172,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:12 PM,0,172,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:17 PM,0,164,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:22 PM,0,162,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:27 PM,0,153,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:32 PM,0,148,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:37 PM,0,152,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:42 PM,0,147,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:47 PM,0,143,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:52 PM,0,141,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 10:57 PM,0,140,,,,,,,,,,,,,,
FreeStyle Libre 3,99628558-b199-48dc-8a24-9ad9268aad6a,03-14-2025 11:02 PM,0,127,,,,,,,,,,,,,,
      CSV
    }

    it 'uploads file' do
      csv_file = fixture_file_upload("glucose.csv", "application/csv")
      post csv_upload_path, params: { csv: csv_file }

      expect(GlucoseMeasurement.count).to eq(15)
      expect(GlucoseMeasurement.first.measured_at).to eq(
        DateTime.strptime("03-14-2025 09:52 PM", "%m-%d-%Y %k:%M %p"),
      )
    end

    it 'barfs if there is no uploaded file' do
      post csv_upload_path

      expect(response.code).to eq "400"
    end
  end
end
